<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Posts on 贾德尔的笔记本</title><link>/posts/</link><description>Recent content in Posts on 贾德尔的笔记本</description><generator>Hugo 0.125.0</generator><language>zh-CN</language><lastBuildDate>Sun, 29 Jun 2025 03:34:57 +0800</lastBuildDate><atom:link href="/posts/index.xml" rel="self" type="application/rss+xml"/><item><title>搭建你的家庭实验室（HomeLab）指南</title><link>/posts/homelab/homelab/</link><pubDate>Sat, 28 Jun 2025 22:00:00 +0800</pubDate><guid>/posts/homelab/homelab/</guid><description>TODO</description></item><item><title>大连景色照片</title><link>/posts/life/da-lian/</link><pubDate>Sat, 28 Jun 2025 22:00:00 +0800</pubDate><guid>/posts/life/da-lian/</guid><description>🏔️ 大连风光摄影 记录大连的历史和自然之美，感受这座城市的独特魅力。
📍 景点概览 拍摄时间：2023年04月
拍摄地点：辽宁省大连市
主要景点：文化场所、历史遗址
大连足球 大连足球文化深厚，曾经是中国足球的摇篮之一。大连实德队在90年代和2000年代初期曾多次夺得中超冠军，培养了许多优秀球员。
梭鱼湾足球场 白天的足球场 夜晚的足球场 人声鼎沸的梭鱼湾足球场 冬天的梭鱼湾足球场 大连市区 老甘井子 老甘井子是大连的一个历史街区，保留了许多老建筑和文化遗迹。
蟹子湾 听老人说牛头山上有一雕像为 獬豸，因此起名为“獬豸湾”后音译为“蟹子湾”。
蟹子湾附近停靠了很多渔船，每到夜幕降临和日出时分，渔民们会在这里忙碌地收网和出海。
此处每到夏天，都会有很多人过来露营，同时在晚上看荧光海滩
蟹子湾广场 蟹子湾的海岸线</description></item><item><title>济南景色照片</title><link>/posts/life/ji-nan/</link><pubDate>Sat, 28 Jun 2025 22:00:00 +0800</pubDate><guid>/posts/life/ji-nan/</guid><description>🏔️ 济南风光摄影 记录济南的风景。
📍 景点概览 拍摄时间：2023年11月
拍摄地点：山东省济南市
主要景点：趵突泉
济南趵突泉 济南趵突泉是中国著名的泉水之一，以其清澈的泉水和独特的自然景观而闻名。趵突泉位于济南市中心，是济南三大名泉之一，也是济南的象征。
趵突泉的泉水清澈见底，像诗人柳宗元小石潭记中所写“泉中鱼可百许头，皆若空游无所依。”。
园内树植 水经注 趵突泉</description></item><item><title>张家界景色照片</title><link>/posts/life/zhang-jia-jie/</link><pubDate>Sat, 28 Jun 2025 22:00:00 +0800</pubDate><guid>/posts/life/zhang-jia-jie/</guid><description>🏔️ 张家界风光摄影 记录在张家界国家森林公园的美好时光，感受大自然的鬼斧神工。
📍 景点概览 拍摄时间：2023年11月
拍摄地点：湖南省张家界市
主要景点：天门山、张家界市区
天门山景区 天门山索道 天门洞奇观 天门洞 - 世界上最高的天然穿山溶洞
简介 天门洞高131.5米，宽50余米，被誉为&amp;quot;天下第一门&amp;quot;。站在洞前，感受到大自然的震撼力量。 天门山999级天梯共有999级台阶。天梯总长218米，起点于海拔1050米的洞前广场，逐次向上延伸至海拔1170米的天门洞，垂直落差约120米。 “9”在中国文化中被认为是至尊之数，表示“最多”、“极”的意思；再加上“9”与汉字“久”同音，表示长久，故“9”被中国人认为是最吉祥的数字，“999”则意味着至高无上和富贵长久。
关于题词 天梯前石壁上的“上天梯”三字以及诗句“莫畏山高空仰止，此中真有上天梯”系有中国现代书法家欧阳中石先生所书，摘录于清朝永定知县俞良模为天门山的题词。
张家澧水河</description></item><item><title>Master 2/2s 鼠标滚轮模块拆解与维修</title><link>/posts/electron/logitech-master2s-scroll-wheel-repair/</link><pubDate>Tue, 22 Apr 2025 21:00:00 +0800</pubDate><guid>/posts/electron/logitech-master2s-scroll-wheel-repair/</guid><description>Master 2 鼠标滚轮模块拆解与维修 适用于 Logitech MX Master 2 / 2S 鼠标的滚轮卡顿、不灵敏、失效等问题。
🛠️ 背景 Logitech Master 2/2s 系列鼠标广受欢迎,滚轮损坏及脱胶情况。
本文记录实际拆解与维修过程，供有类似问题的用户参考。
🧰 所需工具 十字螺丝刀（小号） 撬棒或塑料拨片 镊子 棉签 + 酒精 美工刀 需要替换的金属滚轮（咸鱼有卖） 🔍 故障现象 滚轮卡顿或不灵敏 滚轮防滑橡胶脱落粘手，使用体验不好 📸 拆解步骤（附图建议） 断电 / 关闭鼠标
确保鼠标处于关闭状态，避免静电损伤 如果是无线鼠标，取出电池或断开 USB 接收器 移除鼠标底部贴纸/脚垫
底部有螺丝隐藏在脚垫下方 拆卸螺丝
使用十字螺丝刀拆卸底部螺丝 注意螺丝位置，避免混淆 撬开上壳
使用撬棒或塑料拨片小心撬开鼠标上壳 取出滚轮模块
小心拔出滚轮模块，注意不要损伤排线 清洁滚轮
使用棉签沾酒精清洁滚轮轴承和滚轮表面 清除灰尘和污垢，确保滚轮顺畅 拆下金属滚轮
使用敲棒辅助拆卸金属滚轮，两侧一起用力很容易拆解下来 更换金属滚轮
如果滚轮损坏或脱胶，可以更换新的金属滚轮 注意安装方向，确保滚轮正确放置 重新组装鼠标
按照拆解步骤的反向操作，重新组装鼠标 确保所有螺丝和部件都安装到位 测试鼠标功能
连接鼠标，测试滚轮是否正常工作 确保滚轮灵敏度和防滑效果良好</description></item><item><title>多个 SSH Keys 用于多个git账号</title><link>/posts/devops/linux/ssh-multiple-accounts/</link><pubDate>Thu, 29 Sep 2022 15:33:30 +0800</pubDate><guid>/posts/devops/linux/ssh-multiple-accounts/</guid><description>account Refer To Link
Change SHH config vim $HOME/.ssh/config Host github.com-work HostName github.com User git IdentityFile ~/.ssh/id_rsa_activehacker Host github.com-personal HostName github.com User git IdentityFile ~/.ssh/id_rsa_jexchan Change project git config vim .git/config Modify config [core] repositoryformatversion = 0 filemode = true bare = false logallrefupdates = true ignorecase = true precomposeunicode = true [remote &amp;#34;origin&amp;#34;] - url = git@github.com:&amp;lt;username&amp;gt;/&amp;lt;project&amp;gt;.git + url = git@github.com-personal:&amp;lt;username&amp;gt;/&amp;lt;project&amp;gt;.git fetch = +refs/heads/*:refs/remotes/origin/* [branch &amp;#34;master&amp;#34;] remote = origin merge = refs/heads/master [user] name = &amp;lt;username&amp;gt; email = &amp;lt;email&amp;gt;</description></item><item><title>Nginx常用设置</title><link>/posts/devops/nginx/proxy/</link><pubDate>Thu, 29 Sep 2022 14:55:03 +0800</pubDate><guid>/posts/devops/nginx/proxy/</guid><description>反向代理 http://localhost =&amp;gt; http://api-service
location ~ ^/api { proxy_set_header Host $http_host; proxy_set_header X-Real-IP $remote_addr; proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; proxy_set_header X-Forwarded-Proto $scheme; proxy_pass http://&amp;lt;API-service&amp;gt;:&amp;lt;port&amp;gt;; } 添加后缀 http://ipfs-service/&amp;lt;hash&amp;gt;.&amp;lt;ext&amp;gt; =&amp;gt; http://ipfs-service/&amp;lt;hash&amp;gt;
location ~ ^/prefix { rewrite ^/prefix/(.*).(&amp;lt;ext&amp;gt;)$ /$1 break; proxy_pass http://&amp;lt;API-service&amp;gt;:&amp;lt;port&amp;gt;$1; } 局部代理 http://domian/AAA/static/dir/a.js =&amp;gt; http:///static/dir/a.js
location ~ (.*)/static/(.*)$ { proxy_ignore_client_abort on; proxy_http_version 1.1; proxy_pass https://&amp;lt;static-service&amp;gt;/static/$2; } 重定向 http://localhost/dirname (301)=&amp;gt; http://localhost/dirname/
location ~ ^/dirname { return 301 &amp;#34; /dirname/&amp;#34;; }</description></item><item><title>汇编特征码</title><link>/posts/develop/assembly/assembly/</link><pubDate>Sun, 03 Apr 2022 02:33:36 +0000</pubDate><guid>/posts/develop/assembly/assembly/</guid><description>什么是特征码 特征码用于辨识程序执行的代码段，用于反作弊和逆向 什么情况使用特征码 在逆向工程中，如果程序重新打包或者做加密处理后原有的函数指针发生了偏移，之前的的地址无效。此时使用特征码，可以减少或避免出现类似情况 如何定位特征码 在目标地址上取一定范围的汇编代码记录，其中带有函数调用类似行为代码通畅不会做大的变动除非修改猿程序的函数会需要重新定位。 案例分析 1）如果特征码的代码带有特殊的常量，并且这个常量不是目标程序的内存地址时，优先选取其为特征码。一般常量在程序中很少会改变。
例如如下为某函数的反汇编代码，获取这个函数的地址，选取&amp;quot;83 FE 2E 74 38&amp;quot;为特征码是比较合适的。-5地址处就为函数起始地址。
$-5 &amp;gt; . 56 PUSH ESI ;函数地址 $-4 &amp;gt; . 8B7424 08 MOV ESI,DWORD PTR SS:[ESP+8]
$ ==&amp;gt; &amp;gt; . 83FE 2E CMP ESI,2E ;2e 为特殊常量
$+3 &amp;gt; . 74 38 JE 0BCCCCA2 ;短跳转
$+5 &amp;gt; . 83FE 2D CMP ESI,2D $+8 &amp;gt; . 74 33 JE 0BCCCCA2
$+A &amp;gt; . 83FE 33 CMP ESI,33
2）如果特征码带有短跳转的代码，优先选取。因为只要你选取的特战码以及从选取的特征码地址到跳转的地址之间随目标程序更新变化的概率较少。如上面的短跳转指令
3）如果特征码带有结构体或者类变量的对应偏移的代码，可以选取。一般只要结构体或者类变量不增加成员，就不会改变。</description></item><item><title>docker mysql 数据备份脚本shell（基于crontab）</title><link>/posts/devops/linux/docker-mysql-backup/</link><pubDate>Sat, 03 Jul 2021 09:32:00 +0000</pubDate><guid>/posts/devops/linux/docker-mysql-backup/</guid><description>定时备份数据库 新建一个backup.sh用于备份成sql文件
#! /bin/bash BACKUP_DIR=&amp;#34;&amp;lt;备份sql保存位置&amp;gt;&amp;#34; LOG_FILE=&amp;#34;&amp;lt;LOG文件位置&amp;gt;&amp;#34; DATE=`date +%Y-%m-%d_%H-%M` USER=&amp;#34;数据库用户名&amp;#34; PASSWORD=&amp;#34;数据库密码&amp;#34; DATABASE=&amp;#34;数据库名&amp;#34; SQL_FILE=&amp;#34;mysql_$DATE.sql&amp;#34; DOCKER_TAG=&amp;#34;数据库docker name&amp;#34; if [! -d $BACKUP_DIR]; then mkdir -p &amp;#34;$BACKUP_DIR&amp;#34; fi echo -e &amp;#34;\n&amp;#34; &amp;gt;&amp;gt; $LOG_FILE cd $BACKUP_DIR docker exec -i $DOCKER_TAG mysqldump -u$USER -p$PASSWORD $DATABASE &amp;gt; $SQL_FILE if [[ $? == 0 ]]; then tar czvf $SQL_FILE.gz $SQL_FILE &amp;gt;&amp;gt; $LOG_FILE 2&amp;gt;&amp;amp;1 echo &amp;#34;$DATE----- $SQL_FILE.gz backup success!&amp;#34; &amp;gt;&amp;gt; $LOG_FILE rm -f $SQL_FILE else echo &amp;#34;$DATE----- $SQL_FILE.gz backup fail!&amp;#34; &amp;gt;&amp;gt; $LOG_FILE fi 定时删除超过规定时间的备份文件 新建一个clear_backup.</description></item><item><title>RESTful API 文章解读</title><link>/posts/develop/rules/restful-api/</link><pubDate>Sat, 03 Jul 2021 01:35:35 +0000</pubDate><guid>/posts/develop/rules/restful-api/</guid><description>RESTful API 设计指南 出处 作者： 阮一峰 日期： 2014年5月22日 网络应用程序，分为前端和后端两个部分。当前的发展趋势，就是前端设备层出不穷（手机、平板、桌面电脑、其他专用设备&amp;hellip;&amp;hellip;）。
因此，必须有一种统一的机制，方便不同的前端设备与后端进行通信。这导致API构架的流行，甚至出现&amp;quot;API First&amp;quot;的设计思想。RESTful API是目前比较成熟的一套互联网应用程序的API设计理论。我以前写过一篇《理解RESTful架构》，探讨如何理解这个概念。
今天，我将介绍RESTful API的设计细节，探讨如何设计一套合理、好用的API。我的主要参考了两篇文章（1，2）。
RESTful API 一、协议 API与用户的通信协议，总是使用HTTPs协议。 二、域名 应该尽量将API部署在专用域名之下。 https://api.example.com 如果确定API很简单，不会有进一步扩展，可以考虑放在主域名下。
https://example.org/api/
三、版本（Versioning） 应该将API的版本号放入URL。 https://api.example.com/v1/ 另一种做法是，将版本号放在HTTP头信息中，但不如放入URL方便和直观。Github采用这种做法。
四、路径（Endpoint） 路径又称&amp;quot;终点&amp;quot;（endpoint），表示API的具体网址。 在RESTful架构中，每个网址代表一种资源（resource），所以网址中不能有动词，只能有名词，而且所用的名词往往与数据库的表格名对应。一般来说，数据库中的表都是同种记录的&amp;quot;集合&amp;quot; （collection），所以API中的名词也应该使用复数。
举例来说，有一个API提供动物园（zoo）的信息，还包括各种动物和雇员的信息，则它的路径应该设计成下面这样。
https://api.example.com/v1/zoos https://api.example.com/v1/animals https://api.example.com/v1/employees
五、HTTP动词 对于资源的具体操作类型，由HTTP词表示。 常用的HTTP动词有下面五个（括号里是对应的SQL命令）。
GET（SELECT）：从服务器取出资源（一项或多项）。
POST（CREATE）：在服务器新建一个资源。
PUT（UPDATE）：在服务器更新资源（客户端提供改变后的完整资源）。
PATCH（UPDATE）：在服务器更新资源（客户端提供改变的属性）。
DELETE（DELETE）：从服务器删除资源。 还有两个不常用的HTTP动词。
HEAD：获取资源的元数据。
OPTIONS：获取信息，关于资源的哪些属性是客户端可以改变的。 下面是一些例子。
GET /zoos：列出所有动物园
POST /zoos：新建一个动物园
GET /zoos/ID：获取某个指定动物园的信息
PUT /zoos/ID：更新某个指定动物园的信息（提供该动物园的全部信息）
PATCH /zoos/ID：更新某个指定动物园的信息（提供该动物园的部分信息）
DELETE /zoos/ID：删除某个动物园
GET /zoos/ID/animals：列出某个指定动物园的所有动物
DELETE /zoos/ID/animals/ID：删除某个指定动物园的指定动物
六、过滤信息（Filtering） 如果记录数量很多，服务器不可能都将它们返回给用户。API应该提供参数，过滤返回结果。 下面是一些常见的参数。
?limit=10：指定返回记录的数量
?offset=10：指定返回记录的开始位置。
?page=2&amp;amp;per_page=100：指定第几页，以及每页的记录数。
?sortby=name&amp;amp;order=asc：指定返回结果按照哪个属性排序，以及排序顺序。</description></item><item><title>驱动模式</title><link>/posts/develop/rules/driven-patterns/</link><pubDate>Sun, 06 Jun 2021 12:12:14 +0000</pubDate><guid>/posts/develop/rules/driven-patterns/</guid><description>TDD：测试驱动开发(Test-Driven Development) 测试驱动开发是敏捷开发中的一项核心实践和技术，也是一种设计方法论，TDD首先考虑使用需求（对象、功能、过程、接口等）
主要是编写测试用例框架对功能的过程和接口进行设计，而测试框架可以持续进行验证。大行其道的一些模式对TDD的支持都非常不错，比如MVC和MVP等
BDD：行为驱动开发(Behavior Driven Development) 也就是行为驱动开发。这里的B并非指的是Business，实际上BDD可以看作是对TDD的一种补充，让开发、测试、BA以及客户都能在这个基础上达成一致，JBehave之类的BDD框架
ATDD：验收测试驱动开发（Acceptance Test Driven Development） 通过单元测试用例来驱动功能代码的实现，团队需要定义出期望的质量标准和验收细则，以明确而且达成共识的验收测试计划（包含一系列测试场景）来驱动开发人员的TDD实践和测试人员的测试脚本开发。面向开发人员，强调如何实现系统以及如何检验
DDD：领域驱动开发（Domain Drive Design） DDD指的是Domain Drive Design，也就是领域驱动开发,DDD实际上也是建立在这个基础之上，因为它关注的是Service层的设计，着重于业务的实现,将分析和设计结合起来，不再使他们处于分裂的状态，这对于我们正确完整的实现客户的需求，以及建立一个具有业务伸缩性的模型</description></item><item><title>基于adb命令获取app 内存 FPS CPU 占用信息</title><link>/posts/devops/linux/adb-shell/</link><pubDate>Fri, 04 Jun 2021 17:48:56 +0000</pubDate><guid>/posts/devops/linux/adb-shell/</guid><description>adb shell am [command] am =&amp;gt;是activity manager的缩写,它可以启动activity,启动service,发送广播等 pm =&amp;gt;就是package manager的缩写.
发送一条广播
adb -s BH909NJ676 shell am broadcast adb 获取内存占用 adb shell dumpsys meminfo -h meminfo dump options: [-a] [-d] [-c] [-s] [--oom] [process] -a: include all available information for each process. -d: include dalvik details. -c: dump in a compact machine-parseable representation. -s: dump only summary of application memory usage. -S: dump also SwapPss. --oom: only show processes organized by oom adj.</description></item><item><title>Ubuntu UFW 防火墙常用使用操作</title><link>/posts/devops/linux/ubuntu-ufw/</link><pubDate>Fri, 04 Jun 2021 09:48:55 +0000</pubDate><guid>/posts/devops/linux/ubuntu-ufw/</guid><description>安装 Ubuntu20.04一般都默认安装了UFW（Uncomplicated Firewall），它是一款轻量化的工具，主要用于对输入输出的流量进行监控。如果没有安装，请用下面的命令安装：
apt install ufw 安装成功后查看状态
ufw status verbose 启用UFW
ufw enable ufw default deny 允许外部访问指定端口
ufw allow 53 允许指定IP访问全部端口
ufw allow from &amp;lt;IP&amp;gt; 允许指定的IP访问指定的端口
ufw allow proto tcp from 192.168.0.0/24 to any port 22 删除某一条端口规则配置
ufw delete allow &amp;lt;PORT&amp;gt;</description></item></channel></rss>